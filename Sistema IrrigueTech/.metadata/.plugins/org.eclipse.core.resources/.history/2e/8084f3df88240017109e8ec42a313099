package com.joice.sistemaIrrigamento.model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

/**
 * 
 * @author Joice Marques
 * @since 10/04/2017
 * @category model
 * 
 */

public class ConnectionModel {
	public Statement stm; //preparar e realizar querys
	public ResultSet rs; //armazenar o resultado de uma query
	public Connection conn; //realiza a concxao com o banco
		
	public void Conecta(){
		try{
		 Class.forName("org.postgresql.Driver");
         conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/projeto?user=postgres&password=postgres");
         
         stm = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        } catch (ClassNotFoundException | SQLException e) {
            System.err.println("ExcessÃ£o: " + e.toString());
        }
    }
	
	//valida o login que o usuario informou
    public boolean validar_login(String usuario, String senha) throws ClassNotFoundException {
        try {
        	Class.forName("org.postgresql.Driver");
        	conn = DriverManager.getConnection("jdbc:postgresql://localhost:5432/projeto?user=postgres&password=postgres");
            PreparedStatement pst = conn.prepareStatement("SELECT * FROM cadastro WHERE usuario=? and senha=?");
            pst.setString(1, usuario);
            pst.setString(2, senha);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) { 
                return true; // nessa caso a query retornou pelo menos uma linha que contem os dados inseridos
            } else {
                return false; // nesse caso a query nao retornou nenhuma linha, logo os valores sao invalidos
            }
        } catch (SQLException e) {
        	//retorna os erros que ocorrerem
        	System.out.println("Exceçao".concat(e.getMessage()));
            return false;
        }
    }
   
}
